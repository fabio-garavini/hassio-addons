---
name: Builder

env:
  BUILD_ARGS: --test
  MONITORED_FILES: apparmor.txt build.yaml config.yaml Dockerfile rootfs

on:
  workflow_call:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**/config.yaml'
      - '**/build.yaml'
      - '**/Dockerfile'
      - '**/apparmor.txt'
      - '**/rootfs/**'
  push:
    branches:
      - main
      - dev
    paths:
      - '**/config.yaml'
      - '**/build.yaml'
      - '**/Dockerfile'
      - '**/apparmor.txt'
      - '**/rootfs/**'

defaults:
  run:
    shell: bash

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5

      - name: 📄 Get changed files
        id: changed_files
        uses: masesgroup/retrieve-changed-files@v3

      - name: 🔍 Find add-ons
        id: addons
        uses: home-assistant/actions/helpers/find-addons@master

      - name: Get changed add-ons
        id: changed_addons
        run: |
          declare -a changed_addons
          for addon in ${{ steps.addons.outputs.addons }}; do
            if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon ]]; then
              for file in ${{ env.MONITORED_FILES }}; do
                if [[ "${{ steps.changed_files.outputs.all }}" =~ $addon/$file && -f "$addon/Dockerfile" ]]; then
                  if [[ ! "${changed_addons[@]}" =~ $addon ]]; then
                    changed_addons+=("\"${addon}\",");
                  fi
                fi
              done
            fi
          done

          changed=$(echo ${changed_addons[@]} | rev | cut -c 2- | rev)

          if [[ -n ${changed} ]]; then
            echo "Changed add-ons: $changed";
            echo "changed=true" >> $GITHUB_OUTPUT;
            echo "addons=[$changed]" >> $GITHUB_OUTPUT;
          else
            echo "No add-on had any monitored files changed (${{ env.MONITORED_FILES }})";
          fi

  build:
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    runs-on: ubuntu-latest
    needs: init
    if: needs.init.outputs.changed == 'true'
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: [aarch64, amd64, armhf, armv7, i386]
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: ./${{ matrix.addon }}

      - name: Check add-on arch
        id: check
        run: |
          if [[ "${{ steps.info.outputs.image }}" == "null" ]]; then
            echo "Image property is not defined, skipping build"
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          elif [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
            echo "build_arch=true" >> $GITHUB_OUTPUT;
            echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f2)" >> $GITHUB_OUTPUT;
          else
            echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      - name: Set build arguments
        if: steps.check.outputs.build_arch == 'true' && github.ref == 'refs/heads/main'
        run: |
          if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
              echo "BUILD_ARGS=--docker-hub-check" >> $GITHUB_ENV;
          fi

      - name: Login to DockerHub
        if: steps.check.outputs.build_arch == 'true' && env.BUILD_ARGS == '--docker-hub-check'
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "${{ vars.DOCKERHUB_USERNAME }}" \
            --addon \
            --cosign
